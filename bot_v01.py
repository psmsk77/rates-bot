"""–ë–æ—Ç –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç. –í–µ—Ä—Å–∏—è 0.1"""
import telebot
from telebot import types
import time
from datetime import datetime, timedelta
import os
from db_action import BotDB
import service
import requests_rates


admin_id = os.getenv('ADMIN_ID')  # Telegram ID
token = os.getenv('BOT_RATES_TOKEN')  # Bot token
bot = telebot.TeleBot(os.getenv('BOT_RATES_TOKEN'))  # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞

path_os = ('' if os.name == 'nt' else '/home/user/bot_rate/')  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
BotDB = BotDB(f'{path_os}bot_rate.db')  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
# mailing_list=[False, False, False]


def make_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    button1 = types.KeyboardButton('üéÅ –ö—É—Ä—Å Aliexpress')
    button2 = types.KeyboardButton('üí∞ –î–æ–ª–ª–∞—Ä, –ï–≤—Ä–æ, –Æ–∞–Ω—å')
    button3 = types.KeyboardButton('ü§ë –ö—Ä–∏–ø—Ç–∞')
    button4 = types.KeyboardButton('‚öô –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É')
    button5 = types.KeyboardButton('‚ùì –°–ø—Ä–∞–≤–∫–∞')
    button6 = types.KeyboardButton('üñã –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤')
    global kb_main
    kb_main = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False).row(button1, button2, button3)
    kb_main = kb_main.add(button4)
    kb_main = kb_main.add(button5, button6)


def make_inline_keyboard(list):
    inline_btn_1 = types.InlineKeyboardButton(f'{"‚¨ú" if list[0]==False else "‚úî"} Aliexpress', callback_data=f'{"btn1" if list[0]==False else "btn6"}')
    inline_btn_2 = types.InlineKeyboardButton(f'{"‚¨ú" if list[1]==False else "‚úî"} –ö—É—Ä—Å—ã –¶–ë', callback_data=f'{"btn2" if list[1]==False else "btn7"}')
    inline_btn_3 = types.InlineKeyboardButton(f'{"‚¨ú" if list[2]==False else "‚úî"} –ö—Ä–∏–ø—Ç–∞', callback_data=f'{"btn3" if list[2]==False else "btn8"}')
    inline_kb_full = types.InlineKeyboardMarkup(row_width=3).row(inline_btn_1, inline_btn_2, inline_btn_3)
    inline_kb_full.add(types.InlineKeyboardButton(f'‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='btn4'))
    inline_kb_full.add(types.InlineKeyboardButton(f'‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏', callback_data='btn5'))
    return inline_kb_full


def bot_edit_message_text(callback_query):
    """–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ bot.edit_message_text!"""
    bot.edit_message_text(f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ <b><i>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</i></b>.\n"
                          f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ <b><i>–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏</i></b>.",
                          parse_mode='HTML', reply_markup=make_inline_keyboard(globals()[f'kb_{callback_query.message.chat.id}']),
                          chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)


@bot.callback_query_handler(func=lambda c: c.data and c.data.startswith('btn'))
def process_callback(callback_query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    code = callback_query.data[-1]
    if code.isdigit():
        code = int(code)
    if code == 1:
        bot.answer_callback_query(callback_query.id, text='–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å Aliexpress')
        # mailing_list[0]=True
        globals()[f'kb_{callback_query.message.chat.id}'][0] = True
        bot_edit_message_text(callback_query)
    elif code == 2:
        bot.answer_callback_query(callback_query.id, text='–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å—ã –¶–ë')
        # mailing_list[1] = True
        globals()[f'kb_{callback_query.message.chat.id}'][1] = True
        bot_edit_message_text(callback_query)
    elif code == 3:
        bot.answer_callback_query(callback_query.id, text='–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç')
        # mailing_list[2] = True
        globals()[f'kb_{callback_query.message.chat.id}'][2] = True
        bot_edit_message_text(callback_query)
    elif code == 4:
        if globals()[f'kb_{callback_query.message.chat.id}'][0] == globals()[f'kb_{callback_query.message.chat.id}'][1] == globals()[f'kb_{callback_query.message.chat.id}'][2] == False:
            response_text = "‚ö† –û–®–ò–ë–ö–ê!\n\n–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏."
            bot.answer_callback_query(callback_query.id, text=response_text, show_alert=True)
        else:
            BotDB.add_to_mailing_list(callback_query.message.chat.id, globals()[f'kb_{callback_query.message.chat.id}'])
            response_text = "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!"
            bot.answer_callback_query(callback_query.id, text=response_text, show_alert=True)
            bot.edit_message_reply_markup(callback_query.message.chat.id, callback_query.message.id, reply_markup=None)
    elif code == 5:
        bot.answer_callback_query(callback_query.id, text='–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏! –ñ–¥–µ–º –í–∞—Å —Å–Ω–æ–≤–∞!', show_alert=True)
        bot.edit_message_reply_markup(callback_query.message.chat.id, callback_query.message.id, reply_markup=None)
        # bot.delete_message(callback_query.message.chat.id, callback_query.message.id)  # –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–∞–∫.
        BotDB.add_action(callback_query.message.chat.id, "unsubscribed")  # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ –≤ —Ç–∞–±–ª–∏—Ü—É –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        BotDB.unsubscribe(callback_query.message.chat.id)
    elif code == 6:
        bot.answer_callback_query(callback_query.id, text='–û—Ç–º–µ–Ω–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å Aliexpress')
        globals()[f'kb_{callback_query.message.chat.id}'][0] = False
        bot_edit_message_text(callback_query)
    elif code == 7:
        bot.answer_callback_query(callback_query.id, text='–û—Ç–º–µ–Ω–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å—ã –¶–ë')
        globals()[f'kb_{callback_query.message.chat.id}'][1] = False
        bot_edit_message_text(callback_query)
    elif code == 8:
        bot.answer_callback_query(callback_query.id, text='–û—Ç–º–µ–Ω–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç')
        globals()[f'kb_{callback_query.message.chat.id}'][2] = False
        bot_edit_message_text(callback_query)
    else:
        bot.answer_callback_query(callback_query.id)


@bot.message_handler(commands=["start"])
def start(message, res=False):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã start"""
    print(message.chat)  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∂–∞–ª /start

    bot.send_message(message.chat.id, f"<b>–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}!</b> \U0001F44B\n\n"
                                      f"<b>–≠—Ç–æ –í–∞–ª—é—Ç–Ω—ã–π –ë–æ—Ç! –Ø —Å–æ–æ–±—â–∞—é –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç.</b>\n\n"
                                      f"üí≤ –Ø –∑–Ω–∞—é –Ω–µ —Ç–æ–ª—å–∫–æ <b>–∫—É—Ä—Å—ã –¶–ë</b> –ø–æ –¥–æ–ª–ª–∞—Ä—É, –µ–≤—Ä–æ –∏ —é–∞–Ω—é, "
                                      f"–Ω–æ –∏ –∫—É—Ä—Å—ã <b>–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç</b>.\n\n"
                                      f"\U000026A1 <b>–ê –µ—â–µ, —è –∑–Ω–∞—é –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –Ω–∞ Aliexpress!</b>\n"
                                      f"<i>–°–ª–µ–¥–∏ –∑–∞ –∫—É—Ä—Å–æ–º, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫—É –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º.</i>\n\n"
                                      f"<i>üì® –ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É —Å –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç "
                                      f"–Ω–∞–∂–º–∏ '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É'.</i>\n\n"
                                      f"\U00002B07 –ö–∞–∫–∞—è –≤–∞–ª—é—Ç–∞ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? \U00002B07",
                                        parse_mode='HTML', reply_markup=kb_main)

    # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    if not BotDB.user_exist(message.chat.id):  # –î–æ–±–∞–≤–∏–º —é–∑–µ—Ä–∞
        BotDB.add_user(message.chat.id, message.chat.username, message.chat.first_name, message.chat.last_name)
        BotDB.add_action(message.chat.id, "start")
        bot.send_message(admin_id, f"A new user has been registered\n"
                                        f"ID: {message.chat.id}\n"
                                        f"Name: {message.chat.first_name} {message.chat.last_name}\n")
        print('–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!')
    else:  # –û–±–Ω–æ–≤–∏–º
        BotDB.add_action(message.chat.id, "start")
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! –û–±–Ω–æ–≤–∏–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞.")


@bot.message_handler(commands=["aliexpress"])
def ali(message, res=False):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã aliexpress"""
    BotDB.add_action(message.chat.id, "aliexpress")
    bot.send_message(message.chat.id, '\U0001F559 –í—ã–ø–æ–ª–Ω—è—é...')
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞
    ali = BotDB.request_rate("ALI")
    if ali[0][:16] > str(datetime.now()-timedelta(minutes=10))[:16]:
        answer = (f"–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å 1 USD –Ω–∞ Aliexpress {ali[1]} —Ä—É–±.")
    else:  # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        answer = requests_rates.ali()
    bot.send_message(message.chat.id, answer)


@bot.message_handler(commands=["exchange"])
def exchange(message, res=False):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã exchange. –ó–∞–ø—Ä–æ—Å –∫—É—Ä—Å–æ–≤ –¶–ë"""
    BotDB.add_action(message.chat.id, "centralbank")
    bot.send_message(message.chat.id, '\U0001F559 –í—ã–ø–æ–ª–Ω—è—é...')
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞
    usd = BotDB.request_rate("USD")
    if usd[0][:10] == str(datetime.now().date()):
        eur = BotDB.request_rate("EUR")
        cny = BotDB.request_rate("CNY")
        dict = {"USD": usd[1], "EUR": eur[1], "CNY": cny[1]}
        answer = (f'–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¶–ë –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n'
                  f' \U0001F4B5 1 USD = {round(float(dict["USD"]), 2)} —Ä—É–±.\n'
                  f' \U0001F4B6 1 EUR = {round(float(dict["EUR"]), 2)} —Ä—É–±.\n'
                  f' \U0001F4B4 1 CNY = {round(float(dict["CNY"]), 2)} —Ä—É–±.\n')
    else:  # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        answer = requests_rates.exchange()
    bot.send_message(message.chat.id, answer)


@bot.message_handler(commands=["crypto"])
def crypto(message, res=False):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã crypto"""
    BotDB.add_action(message.chat.id, "crypto")
    bot.send_message(message.chat.id, '\U0001F559 –í—ã–ø–æ–ª–Ω—è—é...')
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞
    btc = BotDB.request_rate("BTC")
    if btc[0][:16] > str(datetime.now()-timedelta(minutes=5))[:16]:
        eth = BotDB.request_rate("ETH")
        ltc = BotDB.request_rate("LTC")
        doge = BotDB.request_rate("DOGE")
        dict = {"BTC": btc[1], "ETH": eth[1], "LTC": ltc[1], "DOGE": doge[1]}
        answer = (f"–ö—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç:\n"
                  f"1 BTC  = $ {dict['BTC']}\n"
                  f"1 ETH  = $ {dict['ETH']}\n"
                  f"1 LTC  = $ {dict['LTC']}\n"
                  f"1 DOGE = $ {dict['DOGE']}")
    else:  # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        answer = requests_rates.crypto()
    bot.send_message(message.chat.id, answer)


@bot.message_handler(commands=["mailing"])
def mailing(message, res=False):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π"""
    BotDB.add_action(message.chat.id, "subscribed")
    globals()[f'kb_{message.chat.id}'] = [False, False, False]
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ <b><i>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</i></b>.\n"
                                      f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ <b><i>–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏</i></b>.",
                                        reply_markup=make_inline_keyboard(globals()[f'kb_{message.chat.id}']), parse_mode='HTML')
    # bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: ", reply_markup=make_inline_keyboard(mailing_list))


@bot.message_handler(commands=["help"])
def help(message, res=False):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã help"""
    BotDB.add_action(message.chat.id, "help")
    bot.send_message(message.chat.id, f'–°–ü–†–ê–í–ö–ê\n\n '
                                      f'\U0000267B –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–æ–∫ "–æ—á–∏—Å—Ç–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞" —Å –±–æ—Ç–æ–º.\n\n'
                                      f'üñã –î–ª—è —Å–≤—è–∑–∏ —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –±–æ—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤" –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç.')


@bot.message_handler(commands=["feedback"])
def get_feedback(message):  # –ø–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∏–¥–±—ç–∫–æ–º
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã feedback"""
    BotDB.add_action(message.chat.id, "feedback")
    feedback_text = message.text
    with open(f"{path_os}feedback.txt", "a", encoding='utf8') as feedback_file:
        feedback_file.write(f'ID:{message.chat.id}\n Date: {datetime.now()}\n Feedback:{feedback_text}\n\n ')
    bot.send_message(message.chat.id, '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º, –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å.', reply_markup=kb_main)
    bot.send_message(admin_id, f"You have a new feedback from\n"
                                 f"ID: {message.chat.id}\n"
                                 f"Name: {message.chat.first_name} {message.chat.last_name}\n"
                                 f"Text: {message.text}")


@bot.message_handler(content_types=["text"])
def handle_text(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π."""
    if message.text == 'üéÅ –ö—É—Ä—Å Aliexpress':
        ali(message)
    elif message.text == 'üí∞ –î–æ–ª–ª–∞—Ä, –ï–≤—Ä–æ, –Æ–∞–Ω—å':
        exchange(message)
    elif message.text == 'ü§ë –ö—Ä–∏–ø—Ç–∞':
        crypto(message)
    elif message.text == '‚öô –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É':
        mailing(message)
    elif message.text.strip() == '‚ùì –°–ø—Ä–∞–≤–∫–∞':
        help(message)
    elif message.text.strip() == 'üñã –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤':
        bot.register_next_step_handler(message, get_feedback)
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞ –≤ —á–∞—Ç.', reply_markup=types.ReplyKeyboardRemove())


if __name__ == '__main__':
    make_keyboard()
    service.start_logging()
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    while True:
        try:
            bot.polling(none_stop=True, interval=0)
        except Exception as error:
            service.exception_logging(error)
            print(error)
            time.sleep(10)
