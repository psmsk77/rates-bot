"""–í–µ—Ä—Å–∏—è Telegram –±–æ—Ç–∞ –¥–ª—è Yandex Cloud Function (FaaS)"""
import telebot
from telebot import types
import os
import json

admin_id = os.getenv('CHAT_ID')  # Telegram ID
token = os.getenv('TG_TOKEN')  # Bot token
bot = telebot.TeleBot(token)  # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞


def make_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    button1 = types.KeyboardButton('üéÅ –ö—É—Ä—Å Aliexpress')
    button2 = types.KeyboardButton('üí∞ –î–æ–ª–ª–∞—Ä, –ï–≤—Ä–æ, –Æ–∞–Ω—å')
    button3 = types.KeyboardButton('ü§ë –ö—Ä–∏–ø—Ç–∞')
    button4 = types.KeyboardButton('‚öô –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É')
    button5 = types.KeyboardButton('‚ùì –°–ø—Ä–∞–≤–∫–∞')
    button6 = types.KeyboardButton('üñã –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤')
    global kb_main
    kb_main = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False).row(button1, button2, button3)
    kb_main = kb_main.add(button4)
    kb_main = kb_main.add(button5, button6)
    return kb_main


def make_inline_keyboard(list):
    inline_btn_1 = types.InlineKeyboardButton(f'{"‚¨ú" if list[0]==False else "‚úî"} Aliexpress', callback_data=f'{"btn1" if list[0]==False else "btn6"}')
    inline_btn_2 = types.InlineKeyboardButton(f'{"‚¨ú" if list[1]==False else "‚úî"} –ö—É—Ä—Å—ã –¶–ë', callback_data=f'{"btn2" if list[1]==False else "btn7"}')
    inline_btn_3 = types.InlineKeyboardButton(f'{"‚¨ú" if list[2]==False else "‚úî"} –ö—Ä–∏–ø—Ç–∞', callback_data=f'{"btn3" if list[2]==False else "btn8"}')
    inline_kb_full = types.InlineKeyboardMarkup(row_width=3).row(inline_btn_1, inline_btn_2, inline_btn_3)
    inline_kb_full.add(types.InlineKeyboardButton(f'‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='btn4'))
    inline_kb_full.add(types.InlineKeyboardButton(f'‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏', callback_data='btn5'))
    return inline_kb_full


def bot_edit_message_text(callback_chat_id, message_id, choice_list):
    """–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ bot.edit_message_text!"""
    bot.edit_message_text(f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ <b><i>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</i></b>.\n"
                          f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ <b><i>–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏</i></b>.",
                          parse_mode='HTML', reply_markup=make_inline_keyboard(choice_list),
                          chat_id=callback_chat_id, message_id=message_id)


def process_callback(data, callback_query_id, callback_chat_id, message_id, choice_list):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    code = data[-1]
    if code.isdigit():
        code = int(code)
    if code == 1:
        bot.answer_callback_query(callback_query_id, text='–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å Aliexpress')
        # mailing_list[0]=True
        choice_list[0] = True
        bot_edit_message_text(callback_chat_id, message_id, choice_list)
    elif code == 2:
        bot.answer_callback_query(callback_query_id, text='–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å—ã –¶–ë')
        # mailing_list[1] = True
        choice_list[1] = True
        bot_edit_message_text(callback_chat_id, message_id, choice_list)
    elif code == 3:
        bot.answer_callback_query(callback_query_id, text='–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç')
        choice_list[2] = True
        bot_edit_message_text(callback_chat_id, message_id, choice_list)
    elif code == 4:
        if choice_list[0] and choice_list[1] and choice_list[2] == False:
            response_text = "‚ö† –û–®–ò–ë–ö–ê!\n\n–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏."
            bot.answer_callback_query(callback_query_id, text=response_text, show_alert=True)
        else:
            response_text = "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!"
            bot.answer_callback_query(callback_query_id, text=response_text, show_alert=True)
            bot.edit_message_reply_markup(callback_chat_id, message_id, reply_markup=None)
    elif code == 5:
        bot.answer_callback_query(callback_query_id, text='–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏! –ñ–¥–µ–º –í–∞—Å —Å–Ω–æ–≤–∞!', show_alert=True)
        bot.edit_message_reply_markup(callback_chat_id, message_id, reply_markup=None)
        # bot.delete_message(callback_query.message.chat.id, callback_query.message.id)  # –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–∞–∫.

    elif code == 6:
        bot.answer_callback_query(callback_query_id, text='–û—Ç–º–µ–Ω–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å Aliexpress')
        choice_list[0] = False
        bot_edit_message_text(callback_chat_id, message_id, choice_list)
    elif code == 7:
        bot.answer_callback_query(callback_query_id, text='–û—Ç–º–µ–Ω–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å—ã –¶–ë')
        choice_list[1] = False
        bot_edit_message_text(callback_chat_id, message_id, choice_list)
    elif code == 8:
        bot.answer_callback_query(callback_query_id, text='–û—Ç–º–µ–Ω–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç')
        choice_list[2] = False
        bot_edit_message_text(callback_chat_id, message_id, choice_list)
    else:
        bot.answer_callback_query(callback_query_id)


def start(chat_id, user_name, res=False):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã start"""

    bot.send_message(chat_id, f"<b>–ü—Ä–∏–≤–µ—Ç, {user_name}!</b> \U0001F44B\n\n"
                                      f"<b>–≠—Ç–æ –í–∞–ª—é—Ç–Ω—ã–π –ë–æ—Ç! –Ø —Å–æ–æ–±—â–∞—é –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç.</b>\n\n"
                                      f"üí≤ –Ø –∑–Ω–∞—é –Ω–µ —Ç–æ–ª—å–∫–æ <b>–∫—É—Ä—Å—ã –¶–ë</b> –ø–æ –¥–æ–ª–ª–∞—Ä—É, –µ–≤—Ä–æ –∏ —é–∞–Ω—é, "
                                      f"–Ω–æ –∏ –∫—É—Ä—Å—ã <b>–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç</b>.\n\n"
                                      f"\U000026A1 <b>–ê –µ—â–µ, —è –∑–Ω–∞—é –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –Ω–∞ Aliexpress!</b>\n"
                                      f"<i>–°–ª–µ–¥–∏ –∑–∞ –∫—É—Ä—Å–æ–º, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫—É –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º.</i>\n\n"
                                      f"<i>üì® –ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É —Å –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç "
                                      f"–Ω–∞–∂–º–∏ '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É'.</i>\n\n"
                                      f"\U00002B07 –ö–∞–∫–∞—è –≤–∞–ª—é—Ç–∞ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? \U00002B07",
                                        parse_mode='HTML', reply_markup=make_keyboard())


def help(chat_id, res=False):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã help"""
    bot.send_message(chat_id, f'–°–ü–†–ê–í–ö–ê\n\n '
                                      f'\U0000267B –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–æ–∫ "–æ—á–∏—Å—Ç–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞" —Å –±–æ—Ç–æ–º.\n\n'
                                      f'üñã –î–ª—è —Å–≤—è–∑–∏ —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –±–æ—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤" –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç.')


def mailing(chat_id, res=False):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π"""
    choice_list = [False, False, False]
    bot.send_message(chat_id, f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ <b><i>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</i></b>.\n"
                                      f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ <b><i>–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏</i></b>.",
                                        reply_markup=make_inline_keyboard(choice_list), parse_mode='HTML')


def handler(event, context):
    print(event)
    message_body = event['messages'][0]['details']['message']['body']
    res = json.loads(message_body)

    if 'callback_query' in res:
        callback_query_id = res['callback_query']['id']
        data = res['callback_query']['data']
        callback_chat_id = res['callback_query']['message']['chat']['id']
        message_id = res['callback_query']['message']['message_id']
        keyboard = res['callback_query']['message']['reply_markup']['inline_keyboard'][0]
        status1 = (False if keyboard[0]['callback_data'] == 'btn1' else True)
        status2 = (False if keyboard[1]['callback_data'] == 'btn2' else True)
        status3 = (False if keyboard[2]['callback_data'] == 'btn3' else True)
        choice_list = [status1, status2, status3]
        process_callback(data, callback_query_id, callback_chat_id, message_id, choice_list)
        return {
        'statusCode': 200,
        'body': 'Function completed successfully!',
        }

    chat_id = res['message']['chat']['id']
    user_name = res['message']['chat']['first_name']
    chat_text = res['message']['text']
    if chat_text == '/start':
        start(chat_id, user_name)
    elif chat_text == '/help':
        help(chat_id)
    elif chat_text == 'üéÅ –ö—É—Ä—Å Aliexpress':
        bot.send_message(chat_id, "–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif chat_text == 'üí∞ –î–æ–ª–ª–∞—Ä, –ï–≤—Ä–æ, –Æ–∞–Ω—å':
        bot.send_message(chat_id, "–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif chat_text == 'ü§ë –ö—Ä–∏–ø—Ç–∞':
        bot.send_message(chat_id, "–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif chat_text == '‚öô –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É':
        mailing(chat_id)
    elif chat_text == '‚ùì –°–ø—Ä–∞–≤–∫–∞':
        help(chat_id)
    elif chat_text == 'üñã –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤':
        bot.send_message(chat_id, "–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        # bot.register_next_step_handler(message, get_feedback)
        # bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞ –≤ —á–∞—Ç.', reply_markup=types.ReplyKeyboardRemove())
    else:
        bot.send_message(chat_id, chat_text)

    return {
        'statusCode': 200,
        'body': 'Function completed successfully!',
    }


# handler(None, None)
